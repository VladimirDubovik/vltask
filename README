Репозиторий содержит:
1) настоящий файл описания репозитория
2) файл конфигурации Ansible
3) файлы описания окружений в каталоге /inventory
4) файлы шаблонов в каталоге /templates
5) файл сценария site.yml

Структура репозитория:
.
├── ansible.cfg
├── inventory
│   ├── one
│   │   ├── group_vars
│   │   │   ├── all.yml
│   │   │   └── ghosts.yml
│   │   └── hosts
│   ├── three
│   │   ├── group_vars
│   │   │   ├── all.yml
│   │   │   └── ghosts.yml
│   │   └── hosts
│   └── two
│       ├── group_vars
│       │   ├── all.yml
│       │   └── ghosts.yml
│       └── hosts
├── logs
│   └── ansible.log
├── README
├── site.yml
└── templates
    ├── script.sh.j2
    ├── settings.cfg.j2
    └── text.txt.j2


ФАЙЛ КОНФИГУРАЦИИ ANSIBLE

Файл конфигурации Ansible определяет ряд параметров, в т.ч. имя каталога описания окружений (./inventory), расположение .log-файла (./log), расположение каталога плагина lookup.

ФАЙЛЫ ОПИСАНИЯ ОКРУЖЕНИЙ

В каталог описания окружений (./inventory) помещено три подкаталога: one, two, three. Каждый подкаталог содержит инвентарный файл hosts и подкаталог group_vars.
Файл hosts для каждого окружения имеет след. структуру:
1) группу действительный живых хостов (alive hosts)  [ahosts]
2) группу несуществующих хостов-призраков (ghosts) [ghosts]
Подкаталог group_vars содержит два файла описания групповых переменных:
1) файл all.yml включает определения переменных окружения для всех групп хостов
2) файл ghosts.yml включает определение переменных окружения для группы хостов [ghosts]

Группа действующих живых хостов [ahosts] для каждого окружения включает один хост: 192.168.43.184. Для подключения к этому хосту используется порт по умолчанию (22).

Группа хостов-призраков [ghosts] для каждого окружения вкл. три хоста (в таблице):
one               | two            | three
192.168.43.25.250 | 192.168.43.250 | 192.168.43.25.249
192.168.43.25.251 | 192.168.43.252 | 192.168.43.25.251
192.168.43.25.252 | 192.168.43.254 | 192.168.43.25.253

В перменных окружения для всех групп хостов для каждого окружения задано имя окружения (inventory_name). Соответственно, для окружения one имя окружения one, для окружения two - two, для окружения three - three.

В переменных окружения для группы хостов [ghosts] задан порт подключения. Для окружения one задан порт: 123, для окружения two - 124, для окружения three - 125.

ФАЙЛЫ ШАБЛОНОВ

В каталог шаблонов (./templates) помещено три файла: script.sh.j2, settings.cfg.j2, text.txt.j2. Каждый файл содержит описание шаблонов для шаблонизатора Jinja2. После запуска сценария эти файлы шаблонизируются и передаются на удаленный хост.

Файл script.sh.j2 на удаленном хосте получает имя script.sh. Файл содержит перечень shell-команд: для вывода времени запуска в .log-файл, для вывода текста из файлов text.txt и settings.cfg, для вывода имени текщего окружения. Команда вывода имени текущего окружения помещается в файл shell.sh в том случае, если при запуске сценария передана переменная print_cur_env (c любым значением). Время запуска помещается в файл app.log в каталоге ~/logs удаленного. Формат записи: "start at ГГГГ.ММ.ДД ЧЧ:ММ".

Файл settings.cfg.j2 на удаленном хосте получает имя settings.cfg. В файл помещается строка со списком хостов-призраков для выбранного окружения и строка с номером порта подключения к хостам призракам. Формат строк: servers={ip:port, ip:port, ...}; app_port=porn_number. Строка servers={...} формируется во время выполнения сценария согласно шаблону, описанному в файле settings.j2. Для формирования строки используются адреса хостов-призраков из инвентарного файла и номер порта, указанный в файле ghosts.yml.

Файл text.txt.j2 на удаленном хосте получает имя text.txt. В исходный файл помещены три текстовых блока. Каждый блок соответствует определенному окружению. После шаблонизации в результируюший файл помещается только один текстовый фрагмент для выбранного окружения.

ФАЙЛ СЦЕНАРИЯ

В файле сценария указаны параметры выполнения:
- user: test
  пользователь test на удаленном хосте
- hosts: ahosts
  группа хостов [ahosts]
- gatcher_fact: false
  сведения об удаленном хосте не собираются

Порядок выполения задач:
1) создание на удаленном хосте каталога ~/config
2) создание на удаленном хосте каталога ~/logs
3) отправка на удаленный хост файла text.txt
4) отправка на удаленный хост файла settings.txt
5) отправка на удаленный хост файла script.sh
6) выполнение на удаленном хосте файла script.sh
7) отображение результатов выполнения файла scripth.sh

ЗАПУСК СЦЕНАРИЯ

Для запуска сценария (play) вызывается программа ansible-plybook. Формат вызова:
$ ansible-playbook -i inventory/[one|two|three] [-e print_cur_env = true] site.yml

После запуска сценария:
1) на удаленном хосте в домашней папке пользователя test создаются два каталога: ~/config и ~/logs
2) в каталог ~/config помещаются файлы text.txt и settings.cfg
3) в домашней папке пользователя test создается файл shell.sh
4) запускается файл shell.sh
5) после запуска файла в каталоге ~/logs создается файл app.log (если файл существует, то он не удаляется и его содержимое не очищается)
6) в файл app.log добавляется строка "start at ...", где вместо ... дата и время запуска файла (дата и время в формате: год.месяц.день час:минута)
7) на терминал удаленного хоставыводится текстовый блок из файла ~/config/text.txt и значение переменной servers из файла ~/config/settings.cfg
8) вывод на терминал удаленного хоста выводится в консоли выполнения сценария на локальном хосте
9) в файл ./log/ansible.log на локальном хосте добавляеются все строки, выведенные на терминал в процессе выполнения сценария

После выполнения сценария файлы на удаленном и локальном хостах не изменяются и не удаляются. При повторном запуске сценария файлы script.sh, settings.cfg и text.txt перезаписываются. Файл app.log не удаляется и не перезаписывается.
